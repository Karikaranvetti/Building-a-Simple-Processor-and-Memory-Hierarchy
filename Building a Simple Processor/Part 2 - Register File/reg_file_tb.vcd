$date
	Sun May  3 22:42:18 2020
$end
$version
	Icarus Verilog
$end
$timescale
	1s
$end
$scope module reg_file_tb $end
$var wire 8 ! REGOUT2 [7:0] $end
$var wire 8 " REGOUT1 [7:0] $end
$var reg 1 # CLK $end
$var reg 3 $ READREG1 [2:0] $end
$var reg 3 % READREG2 [2:0] $end
$var reg 1 & RESET $end
$var reg 8 ' WRITEDATA [7:0] $end
$var reg 1 ( WRITEENABLE $end
$var reg 3 ) WRITEREG [2:0] $end
$scope module myregfile $end
$var wire 1 # CLK $end
$var wire 8 * IN [7:0] $end
$var wire 3 + INADDRESS [2:0] $end
$var wire 8 , OUT1 [7:0] $end
$var wire 3 - OUT1ADDRESS [2:0] $end
$var wire 8 . OUT2 [7:0] $end
$var wire 3 / OUT2ADDRESS [2:0] $end
$var wire 1 & RESET $end
$var wire 1 ( WRITE $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
bx /
bx .
bx -
bx ,
bx +
bx *
bx )
0(
bx '
1&
bx %
bx $
1#
bx "
bx !
$end
#1
b100 %
b100 /
b0 $
b0 -
0&
#4
b0 !
b0 .
b0 "
b0 ,
#5
0#
#10
1#
#14
1(
b1011111 '
b1011111 *
b10 )
b10 +
#15
0#
#20
1#
#24
0(
#25
b10 $
b10 -
0#
#27
b1011111 "
b1011111 ,
#30
1#
#34
b1 $
b1 -
1(
b11100 '
b11100 *
b1 )
b1 +
#35
0#
#36
b0 "
b0 ,
#40
1#
#44
b11100 "
b11100 ,
0(
#45
0#
#50
1#
#54
1(
b110 '
b110 *
b100 )
b100 +
#55
0#
#60
1#
#64
b110 !
b110 .
b1111 '
b1111 *
#65
0#
#70
1#
#74
b1111 !
b1111 .
0(
#75
0#
#80
1#
1(
b110010 '
b110010 *
b1 )
b1 +
#84
b110010 "
b110010 ,
#85
0#
0(
#90
1#
#95
0#
b111 %
b111 /
1(
b1111 '
b1111 *
b111 )
b111 +
#97
b0 !
b0 .
#100
1#
#104
b1111 !
b1111 .
#105
0#
#110
1#
#115
0#
1&
#119
b0 !
b0 .
b0 "
b0 ,
#120
1#
#124
b1111 !
b1111 .
#125
0#
#130
1#
0&
